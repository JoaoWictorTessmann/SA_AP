/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TELAS;

import DAO.ImagemTelas;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Image;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

public class TelaLista extends javax.swing.JFrame {

    /**
     * Creates new form TelaLista
     */
    public TelaLista() {
        initComponents();
        // Garantir tamanho antes de escalar
        setSize(1500, 850); // ou setExtendedState(MAXIMIZED_BOTH);
        setLocationRelativeTo(null);//Centralizar na tela
        setLayout(null); // necessário para posicionamento manual
        setResizable(false);

        jbtAdicionar.setContentAreaFilled(true); // tira o fundo branco
        jbtAdicionar.setBorderPainted(false);     // tira a borda
        jbtAdicionar.setForeground(java.awt.Color.WHITE);
        jbtAdicionar.setOpaque(false);            // permite transparência
        jbtAdicionar.setFont(new Font("SansSerif", Font.BOLD, 40)); // ou outro tamanho
        jbtAdicionar.setBackground(new Color(20, 40, 60)); // cor branca ou como a cor do fundo

        jbtModificar.setContentAreaFilled(true); // tira o fundo branco
        jbtModificar.setBorderPainted(false);     // tira a borda
        jbtModificar.setForeground(java.awt.Color.WHITE);
        jbtModificar.setOpaque(false);            // permite transparência
        jbtModificar.setFont(new Font("SansSerif", Font.BOLD, 40)); // ou outro tamanho
        jbtModificar.setBackground(new Color(20, 40, 60)); // cor branca ou como a cor do fundo

        jbtCancelar.setContentAreaFilled(true); // tira o fundo branco
        jbtCancelar.setBorderPainted(false);     // tira a borda
        jbtCancelar.setForeground(java.awt.Color.WHITE);
        jbtCancelar.setOpaque(false);            // permite transparência
        jbtCancelar.setFont(new Font("SansSerif", Font.BOLD, 40)); // ou outro tamanho
        jbtCancelar.setBackground(new Color(20, 40, 60)); // cor branca ou como a cor do fundo

        jbtFinalizar.setContentAreaFilled(true); // tira o fundo branco
        jbtFinalizar.setBorderPainted(false);     // tira a borda
        jbtFinalizar.setForeground(java.awt.Color.WHITE);
        jbtFinalizar.setOpaque(false);            // permite transparência
        jbtFinalizar.setFont(new Font("SansSerif", Font.BOLD, 40)); // ou outro tamanho
        jbtFinalizar.setBackground(new Color(20, 40, 60)); // cor branca ou como a cor do fundo

        jbtSair.setContentAreaFilled(true); // tira o fundo branco
        jbtSair.setBorderPainted(false);     // tira a borda
        jbtSair.setForeground(java.awt.Color.WHITE);
        jbtSair.setOpaque(false);            // permite transparência
        jbtSair.setFont(new Font("SansSerif", Font.BOLD, 40)); // ou outro tamanho
        jbtSair.setBackground(new Color(20, 40, 60)); // cor branca ou como a cor do fundo

        ImageIcon imagemOriginal = DAO.ImagemTelas.getImagem("telalista");

        if (imagemOriginal != null) {
            // Escala a imagem de acordo com a tela
            Image imagem = imagemOriginal.getImage().getScaledInstance(getWidth(), getHeight(), Image.SCALE_SMOOTH);
            JLabel fundo = new JLabel(new ImageIcon(imagem));
            fundo.setBounds(0, 0, getWidth(), getHeight());

            // Adiciona a imagem atrás dos componentes
            getContentPane().add(fundo);
            getContentPane().setComponentZOrder(fundo, getContentPane().getComponentCount() - 1);
        } else {
            System.out.println("Imagem de fundo não encontrada.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        JtlLista = new javax.swing.JTable();
        jbtSair = new javax.swing.JButton();
        jbtAdicionar = new javax.swing.JButton();
        jbtModificar = new javax.swing.JButton();
        jbtCancelar = new javax.swing.JButton();
        jbtFinalizar = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        JtlLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Cliente", "Descrição", "Carro", "Placa", "Valor", "Est. Tempo", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(JtlLista);

        jbtSair.setText("Sair");
        jbtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSairActionPerformed(evt);
            }
        });

        jbtAdicionar.setText("Adicionar");
        jbtAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAdicionarActionPerformed(evt);
            }
        });

        jbtModificar.setText("Editar");
        jbtModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtModificarActionPerformed(evt);
            }
        });

        jbtCancelar.setText("Cancelar");
        jbtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCancelarActionPerformed(evt);
            }
        });

        jbtFinalizar.setText("Finalizar");
        jbtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtFinalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jbtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(128, 128, 128)
                        .addComponent(jbtAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1403, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(257, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(252, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(133, 133, 133))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSairActionPerformed
        TelaLogin login = new TelaLogin();
        login.setVisible(true);
        login.setLocationRelativeTo(null); // centraliza
        this.dispose(); // fecha a tela atual
    }//GEN-LAST:event_jbtSairActionPerformed

    private void jbtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtFinalizarActionPerformed
        TelaFinalizar FinalizarPedido = new TelaFinalizar(this);
        FinalizarPedido.setVisible(true);
    }//GEN-LAST:event_jbtFinalizarActionPerformed

    private void jbtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCancelarActionPerformed
        TelaCancelar cancelarPedido = new TelaCancelar(this);
        cancelarPedido.setVisible(true);
    }//GEN-LAST:event_jbtCancelarActionPerformed

    private void jbtModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtModificarActionPerformed
        TelaModificar modificarPedido = new TelaModificar(this);
        modificarPedido.setVisible(true);
    }//GEN-LAST:event_jbtModificarActionPerformed

    private void jbtAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAdicionarActionPerformed
        TelaAdicionar adicionar = new TelaAdicionar(this);
        adicionar.setVisible(true);
    }//GEN-LAST:event_jbtAdicionarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaLista().setVisible(false);
            }
        });
    }

    public void carregarPedidos() {
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        model.setColumnIdentifiers(new Object[]{
            "ID", "Cliente", "Descrição", "Modelo", "Placa", "Valor", "Tempo", "Status"
        });

        try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_autopaint", "root", "")) {
            String sql = "SELECT * FROM servicos";
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();

            // Formato de moeda brasileira
            NumberFormat formatoMoeda = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));

            while (rs.next()) {
                double valor = rs.getDouble("valor");
                String valorFormatado = formatoMoeda.format(valor); // Ex: R$ 100,00

                model.addRow(new Object[]{
                    rs.getInt("id_servico"),
                    rs.getString("nome_cliente"),
                    rs.getString("descricao"),
                    rs.getString("modelo_carro"),
                    rs.getString("placa"),
                    valorFormatado, // 👈 valor formatado como moeda
                    rs.getString("tempo_estimado"),
                    rs.getString("status_servico")
                });
            }

            rs.close();
            stmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar pedidos: " + e.getMessage());
        }
        // Fundo e fonte
        JtlLista.setBackground(Color.WHITE); // fundo escuro
        JtlLista.setForeground(Color.BLACK);           // texto branco
        JtlLista.setFont(new Font("SansSerif", Font.PLAIN, 16));

// Cabeçalho
        JtlLista.getTableHeader().setBackground(new Color(30, 30, 40));
        JtlLista.getTableHeader().setForeground(Color.BLACK);
        JtlLista.getTableHeader().setFont(new Font("SansSerif", Font.BOLD, 16));
        JtlLista.getTableHeader().setOpaque(true);

// Alternância de cor nas linhas (zebra)
        JtlLista.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                    boolean isSelected, boolean hasFocus, int row, int column) {

                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                c.setBackground((row % 2 == 0) ? new Color(41, 45, 62) : new Color(50, 55, 75));
                c.setForeground(Color.WHITE);
                return c;
            }
        });

        // Aplica o modelo à tabela e impede modificações visuais
        JtlLista.setModel(model);
        TableColumnModel colunaModel = JtlLista.getColumnModel();
        colunaModel.getColumn(0).setPreferredWidth(15);   // ID
        colunaModel.getColumn(1).setPreferredWidth(120);  // Cliente
        colunaModel.getColumn(2).setPreferredWidth(305);  // Descrição
        colunaModel.getColumn(3).setPreferredWidth(120);  // Modelo
        colunaModel.getColumn(4).setPreferredWidth(100);  // Placa
        colunaModel.getColumn(5).setPreferredWidth(80);   // Valor
        colunaModel.getColumn(6).setPreferredWidth(90);   // Tempo
        colunaModel.getColumn(7).setPreferredWidth(120);  // Status
        JtlLista.getTableHeader().setReorderingAllowed(false);   // impede mover colunas
        JtlLista.getTableHeader().setResizingAllowed(false);     // impede redimensionar colunas
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JtlLista;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbtAdicionar;
    private javax.swing.JButton jbtCancelar;
    private javax.swing.JButton jbtFinalizar;
    private javax.swing.JButton jbtModificar;
    private javax.swing.JButton jbtSair;
    // End of variables declaration//GEN-END:variables
}
