/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TELAS;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Insets;
import java.awt.RenderingHints;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.border.AbstractBorder;

/**
 *
 * @author Usuario
 */
public class TelaFinalizar extends javax.swing.JFrame {

    /**
     * Creates new form TelaFinalizar
     */
    public TelaFinalizar() {
        initComponents();
    }
    private TelaLista telaLista; // referência da tela principal

    public TelaFinalizar(TelaLista telaLista) {
        initComponents();
        this.telaLista = telaLista;
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        // Garantir tamanho antes de escalar
        setSize(500, 550); // ou setExtendedState(MAXIMIZED_BOTH);
        setLocationRelativeTo(null);//Centralizar na tela
        setLayout(null); // necessário para posicionamento manual
        setResizable(false);
        setTitle("Tela Finalizar Pedido");
        jlbFinal.setFont(new Font("SansSerif", java.awt.Font.BOLD, 35));
        jlbIdPedido.setFont(new Font("SansSerif", java.awt.Font.BOLD, 25));

        jtfIdPedidoFim.setOpaque(false);
        jtfIdPedidoFim.setBorder(javax.swing.BorderFactory.createEmptyBorder());
        jtfIdPedidoFim.setForeground(java.awt.Color.BLACK);
        jtfIdPedidoFim.setBorder(new RoundedBorder(20));
        jtfIdPedidoFim.setFont(new java.awt.Font("SansSerif", java.awt.Font.BOLD, 22));

        jbtFinalizarServico.setContentAreaFilled(true); // tira o fundo branco
        jbtFinalizarServico.setBorderPainted(false);     // tira a borda
        jbtFinalizarServico.setOpaque(false);            // permite transparência
        jbtFinalizarServico.setFont(new Font("SansSerif", Font.BOLD, 20)); // ou outro tamanho
        jbtFinalizarServico.setForeground(java.awt.Color.WHITE); // cor branca ou como a cor do fundo
        jbtFinalizarServico.setBackground(new Color(20, 40, 60)); // Azul escuro (RGB)
        
        jbtvoltar.setContentAreaFilled(true); // tira o fundo branco
        jbtvoltar.setBorderPainted(false);     // tira a borda
        jbtvoltar.setOpaque(false);            // permite transparência
        jbtvoltar.setFont(new Font("SansSerif", Font.BOLD, 20)); // ou outro tamanho
        jbtvoltar.setForeground(java.awt.Color.WHITE); // cor branca ou como a cor do fundo
        jbtvoltar.setBackground(new Color(20, 40, 60)); // Azul escuro (RGB)

        ImageIcon imagemOriginal = DAO.ImagemTelas.getImagem("telafinalizar");

        if (imagemOriginal != null) {
            // Escala a imagem de acordo com a tela
            Image imagem = imagemOriginal.getImage().getScaledInstance(getWidth(), getHeight(), Image.SCALE_SMOOTH);
            JLabel fundo = new JLabel(new ImageIcon(imagem));
            fundo.setBounds(0, 0, getWidth(), getHeight());

            // Adiciona a imagem atrás dos componentes
            getContentPane().add(fundo);
            getContentPane().setComponentZOrder(fundo, getContentPane().getComponentCount() - 1);
        } else {
            System.out.println("Imagem de fundo não encontrada.");
        }

    }

    class RoundedBorder extends AbstractBorder {

        private int radius;

        public RoundedBorder(int radius) {
            this.radius = radius;
        }

        @Override
        public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
            Graphics2D g2 = (Graphics2D) g.create();
            g2.setColor(Color.GRAY);
            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            g2.drawRoundRect(x, y, width - 1, height - 1, radius, radius);
            g2.dispose();
        }

        @Override
        public Insets getBorderInsets(Component c) {
            return new Insets(10, 10, 10, 10); // Espaçamento interno
        }

        @Override
        public Insets getBorderInsets(Component c, Insets insets) {
            insets.set(10, 10, 10, 10);
            return insets;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtFinalizarServico = new javax.swing.JButton();
        jtfIdPedidoFim = new javax.swing.JTextField();
        jbtvoltar = new javax.swing.JButton();
        jlbFinal = new javax.swing.JLabel();
        jlbIdPedido = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jbtFinalizarServico.setText("Finalizar Serviço");
        jbtFinalizarServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtFinalizarServicoActionPerformed(evt);
            }
        });

        jbtvoltar.setText("Voltar");
        jbtvoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtvoltarActionPerformed(evt);
            }
        });

        jlbFinal.setText("Finalizar Serviço");

        jlbIdPedido.setText("ID do Pedido");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtvoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jbtFinalizarServico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlbFinal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jtfIdPedidoFim, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jlbIdPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(162, Short.MAX_VALUE)
                .addComponent(jlbFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jlbIdPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jtfIdPedidoFim, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtFinalizarServico, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtvoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtFinalizarServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtFinalizarServicoActionPerformed
        try {
            int idFinalizar = Integer.parseInt(jtfIdPedidoFim.getText());

            try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_autopaint", "root", "")) {

                // Verifica o status atual do pedido
                String sqlVerifica = "SELECT status_servico FROM servicos WHERE id_servico = ?";
                PreparedStatement stmtVerifica = conn.prepareStatement(sqlVerifica);
                stmtVerifica.setInt(1, idFinalizar);
                ResultSet resultado = stmtVerifica.executeQuery();

                if (resultado.next()) {
                    String statusAtual = resultado.getString("status_servico");

                    if ("Finalizado".equalsIgnoreCase(statusAtual)) {
                        new TelaErroAdd("Este pedido já está finalizado.<br>Status atual: Finalizado").setVisible(true);
                        return;
                    }

                    if ("Cancelado".equalsIgnoreCase(statusAtual)) {
                        new TelaErroAdd("Este pedido já foi cancelado.<br>Status atual: Cancelado").setVisible(true);
                        return;
                    }

                    if ("Pendente".equalsIgnoreCase(statusAtual)) {
                        // Executa a finalização
                        String sqlAtualiza = "UPDATE servicos SET status_servico = 'Finalizado' WHERE id_servico = ?";
                        PreparedStatement stmtAtualiza = conn.prepareStatement(sqlAtualiza);
                        stmtAtualiza.setInt(1, idFinalizar);

                        int linhasAfetadas = stmtAtualiza.executeUpdate();

                        if (linhasAfetadas > 0) {
                            new TelaAddSucesso("Pedido finalizado com sucesso.<br>Status atualizado: Finalizado").setVisible(true);
                            telaLista.carregarPedidos();
                            this.dispose();
                        } else {
                            new TelaErroAdd("Erro ao finalizar pedido. Nenhum registro foi alterado.").setVisible(true);
                        }
                    } else {
                        new TelaErroAdd("Status do pedido não reconhecido: " + statusAtual).setVisible(true);
                    }

                } else {
                    new TelaErroAdd("ID não encontrado. Nenhum pedido corresponde.").setVisible(true);
                }

            }

        } catch (NumberFormatException e) {
            new TelaErroAdd("Digite um número válido para o ID.").setVisible(true);
        } catch (SQLException e) {
            new TelaErroAdd("Erro ao finalizar pedido: " + e.getMessage()).setVisible(true);
        }
    }//GEN-LAST:event_jbtFinalizarServicoActionPerformed

    private void jbtvoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtvoltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbtvoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaFinalizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaFinalizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaFinalizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaFinalizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaFinalizar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbtFinalizarServico;
    private javax.swing.JButton jbtvoltar;
    private javax.swing.JLabel jlbFinal;
    private javax.swing.JLabel jlbIdPedido;
    private javax.swing.JTextField jtfIdPedidoFim;
    // End of variables declaration//GEN-END:variables
}
